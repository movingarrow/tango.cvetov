# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

#
#    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory:
#            memory: ~
#
#    firewalls:
#        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        main:
#            anonymous: ~
#            # activate different ways to authenticate
#
#            # http_basic: ~
#            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: ~
#            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                    # if you are using Symfony < 2.8, use the following config instead:
                    # csrf_provider: form.csrf_provider

            logout:       true
            anonymous:    true

#        secured_area:
#                    anonymous: ~
#                    oauth:
#                        resource_owners:
#                            facebook:           "/login/check-facebook"
#                            google:             "/login/check-google"
#                            my_custom_provider: "/login/check-custom"
#                            my_github:          "/login/check-github"
#                        login_path:        /login
#                        use_forward:       false
#                        failure_path:      /login
#
#                        oauth_user_provider:
#                            service: my.oauth_aware.user_provider.service
#
#    access_control:
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/, role: ROLE_ADMIN }